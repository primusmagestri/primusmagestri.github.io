{"version":3,"sources":["webpack:///./src/templates/index-page.js","webpack:///./src/components/Features.js"],"names":["__webpack_require__","r","__webpack_exports__","d","IndexPageTemplate","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_Layout__WEBPACK_IMPORTED_MODULE_2__","_components_Features__WEBPACK_IMPORTED_MODULE_3__","_components_BlogRoll__WEBPACK_IMPORTED_MODULE_4__","_ref","image","title","heading","subheading","mainpitch","description","intro","a","createElement","className","style","backgroundImage","childImageSharp","fluid","src","backgroundPosition","backgroundAttachment","display","height","lineHeight","justifyContent","alignItems","flexDirection","boxShadow","backgroundColor","color","padding","gridItems","blurbs","to","IndexPage","_ref2","frontmatter","data","markdownRemark","_components_PreviewCompatibleImage__WEBPACK_IMPORTED_MODULE_1__","FeatureGrid","map","item","key","text","width","imageInfo"],"mappings":"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","file":"component---src-templates-index-page-js-fa1d6005beb10100a57b.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link, graphql } from 'gatsby'\r\n\r\nimport Layout from '../components/Layout'\r\nimport Features from '../components/Features'\r\nimport BlogRoll from '../components/BlogRoll'\r\n\r\nexport const IndexPageTemplate = ({\r\n  image,\r\n  title,\r\n  heading,\r\n  subheading,\r\n  mainpitch,\r\n  description,\r\n  intro,\r\n}) => (\r\n  <div>\r\n    <div\r\n      className=\"full-width-image margin-top-0\"\r\n      style={{\r\n        backgroundImage: `url(${\r\n          !!image.childImageSharp ? image.childImageSharp.fluid.src : image\r\n        })`,\r\n        backgroundPosition: `top left`,\r\n        backgroundAttachment: `fixed`,\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          height: '150px',\r\n          lineHeight: '1',\r\n          justifyContent: 'space-around',\r\n          alignItems: 'left',\r\n          flexDirection: 'column',\r\n        }}\r\n      >\r\n        <h1\r\n          className=\"has-text-weight-bold is-size-3-mobile is-size-2-tablet is-size-1-widescreen\"\r\n          style={{\r\n            boxShadow:\r\n              'rgb(255, 68, 0) 0.5rem 0px 0px, rgb(255, 68, 0) -0.5rem 0px 0px',\r\n            backgroundColor: 'rgb(255, 68, 0)',\r\n            color: 'white',\r\n            lineHeight: '1',\r\n            padding: '0.25em',\r\n          }}\r\n        >\r\n          {title}\r\n        </h1>\r\n        <h3\r\n          className=\"has-text-weight-bold is-size-5-mobile is-size-5-tablet is-size-4-widescreen\"\r\n          style={{\r\n            boxShadow:\r\n              'rgb(255, 68, 0) 0.5rem 0px 0px, rgb(255, 68, 0) -0.5rem 0px 0px',\r\n            backgroundColor: 'rgb(255, 68, 0)',\r\n            color: 'white',\r\n            lineHeight: '1',\r\n            padding: '0.25em',\r\n          }}\r\n        >\r\n          {subheading}\r\n        </h3>\r\n      </div>\r\n    </div>\r\n    <section className=\"section section--gradient\">\r\n      <div className=\"container\">\r\n        <div className=\"section\">\r\n          <div className=\"columns\">\r\n            <div className=\"column is-10 is-offset-1\">\r\n              <div className=\"content\">\r\n                <div className=\"content\">\r\n                  <div className=\"tile\">\r\n                    <h1 className=\"title\">{mainpitch.title}</h1>\r\n                  </div>\r\n                  <div className=\"tile\">\r\n                    <h3 className=\"subtitle\">{mainpitch.description}</h3>\r\n                  </div>\r\n                </div>\r\n                <div className=\"columns\">\r\n                  <div className=\"column is-12\">\r\n                    <h3 className=\"has-text-weight-semibold is-size-2\">\r\n                      {heading}\r\n                    </h3>\r\n                    <p>{description}</p>\r\n                  </div>\r\n                </div>\r\n                <Features gridItems={intro.blurbs} />\r\n                <div className=\"columns\">\r\n                  <div className=\"column is-12 has-text-centered\">\r\n                    <Link className=\"btn\" to=\"/products\">\r\n                      See all products\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n                <div className=\"column is-12\">\r\n                  <h3 className=\"has-text-weight-semibold is-size-2\">\r\n                    Latest stories\r\n                  </h3>\r\n                  <BlogRoll />\r\n                  <div className=\"column is-12 has-text-centered\">\r\n                    <Link className=\"btn\" to=\"/blog\">\r\n                      Read more\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </div>\r\n)\r\n\r\nIndexPageTemplate.propTypes = {\r\n  image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\r\n  title: PropTypes.string,\r\n  heading: PropTypes.string,\r\n  subheading: PropTypes.string,\r\n  mainpitch: PropTypes.object,\r\n  description: PropTypes.string,\r\n  intro: PropTypes.shape({\r\n    blurbs: PropTypes.array,\r\n  }),\r\n}\r\n\r\nconst IndexPage = ({ data }) => {\r\n  const { frontmatter } = data.markdownRemark\r\n\r\n  return (\r\n    <Layout>\r\n      <IndexPageTemplate\r\n        image={frontmatter.image}\r\n        title={frontmatter.title}\r\n        heading={frontmatter.heading}\r\n        subheading={frontmatter.subheading}\r\n        mainpitch={frontmatter.mainpitch}\r\n        description={frontmatter.description}\r\n        intro={frontmatter.intro}\r\n      />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nIndexPage.propTypes = {\r\n  data: PropTypes.shape({\r\n    markdownRemark: PropTypes.shape({\r\n      frontmatter: PropTypes.object,\r\n    }),\r\n  }),\r\n}\r\n\r\nexport default IndexPage\r\n\r\nexport const pageQuery = graphql`\r\n  query IndexPageTemplate {\r\n    markdownRemark(frontmatter: { templateKey: { eq: \"index-page\" } }) {\r\n      frontmatter {\r\n        title\r\n        image {\r\n          childImageSharp {\r\n            fluid(maxWidth: 2048, quality: 100) {\r\n              ...GatsbyImageSharpFluid\r\n            }\r\n          }\r\n        }\r\n        heading\r\n        subheading\r\n        mainpitch {\r\n          title\r\n          description\r\n        }\r\n        description\r\n        intro {\r\n          blurbs {\r\n            image {\r\n              childImageSharp {\r\n                fluid(maxWidth: 240, quality: 64) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n            text\r\n          }\r\n          heading\r\n          description\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport PreviewCompatibleImage from '../components/PreviewCompatibleImage'\r\n\r\nconst FeatureGrid = ({ gridItems }) => (\r\n  <div className=\"columns is-multiline\">\r\n    {gridItems.map(item => (\r\n      <div key={item.text} className=\"column is-6\">\r\n        <section className=\"section\">\r\n          <div className=\"has-text-centered\">\r\n            <div\r\n              style={{\r\n                width: '240px',\r\n                display: 'inline-block',\r\n              }}\r\n            >\r\n              <PreviewCompatibleImage imageInfo={item} />\r\n            </div>\r\n          </div>\r\n          <p>{item.text}</p>\r\n        </section>\r\n      </div>\r\n    ))}\r\n  </div>\r\n)\r\n\r\nFeatureGrid.propTypes = {\r\n  gridItems: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\r\n      text: PropTypes.string,\r\n    })\r\n  ),\r\n}\r\n\r\nexport default FeatureGrid\r\n"],"sourceRoot":""}